geom_area(alpha = 0.7) +
theme_minimal_hgrid() +
scale_fill_discrete_diverging(palette = "Vik") +
xlab(NULL) +
ylab("Emissions (Million Tons)") +
ggtitle("National CAP Emissions - Stationary Sources") +
scale_x_continuous(breaks = seq(2002, 2014, by = 3), expand = c(0, 0)) +
scale_y_continuous(labels = scales::comma, limits = c(0, 80))+
theme(plot.margin=unit(c(0,1,0,0),"cm"), plot.title = element_text(vjust=-0.5))
grid.arrange(Nat_Caps_All_plot+theme(legend.position = "none"), Nat_Caps_Stat_plot+theme(legend.position = "none"), DE_Caps_All_Plot+theme(legend.position = "none"), DE_Caps_Stat_plot+theme(legend.position = "none"), legend, layout_matrix = rbind(c(1, 1, 1, 1, 2, 2, 2, 2), c(3, 3, 3, 3, 4, 4, 4, 4), c(NA, 5, 5, 5, 5, 5, 5, NA)), heights = c(1, 1, 0.4))
DE_Caps_Stat <- read.csv("DE Caps Stationary.csv", check.names = FALSE)
#make pollutants factors
DE_Caps_Stat$POLLUTANT <- as.factor(DE_Caps_Stat$POLLUTANT)
DE_Caps_Stat_long <- DE_Caps_Stat %>%
gather(Year, Tons, -POLLUTANT)
#Make year numeric
DE_Caps_Stat_long$Year <- as.numeric(DE_Caps_Stat_long$Year)
DE_Caps_Stat_plot <-  ggplot(DE_Caps_Stat_long, aes(x = Year, y = Tons, fill=POLLUTANT)) +
geom_area(alpha = 0.7) +
theme_minimal_hgrid() +
scale_fill_discrete_diverging(palette = "Vik") +
ggtitle("Delaware CAP Emissions - Stationary Sources") +
xlab(NULL) +
ylab("Emissions (Thousand Tons)") +
scale_x_continuous(breaks = seq(2002, 2014, by = 3), expand = c(0, 0)) +
scale_y_continuous(labels = scales::comma, limits = c(0, 190))+
theme(plot.margin=unit(c(0,1,0,0),"cm"), plot.title = element_text(vjust=-0.5))
grid.arrange(Nat_Caps_All_plot+theme(legend.position = "none"), Nat_Caps_Stat_plot+theme(legend.position = "none"), DE_Caps_All_Plot+theme(legend.position = "none"), DE_Caps_Stat_plot+theme(legend.position = "none"), legend, layout_matrix = rbind(c(1, 1, 1, 1, 2, 2, 2, 2), c(3, 3, 3, 3, 4, 4, 4, 4), c(NA, 5, 5, 5, 5, 5, 5, NA)), heights = c(1, 1, 0.4))
DE_Caps_Stat <- read.csv("DE Caps Stationary.csv", check.names = FALSE)
#make pollutants factors
DE_Caps_Stat$POLLUTANT <- as.factor(DE_Caps_Stat$POLLUTANT)
DE_Caps_Stat_long <- DE_Caps_Stat %>%
gather(Year, Tons, -POLLUTANT)
#Make year numeric
DE_Caps_Stat_long$Year <- as.numeric(DE_Caps_Stat_long$Year)
DE_Caps_Stat_plot <-  ggplot(DE_Caps_Stat_long, aes(x = Year, y = Tons, fill=POLLUTANT)) +
geom_area(alpha = 0.7) +
theme_minimal_hgrid() +
scale_fill_discrete_diverging(palette = "Vik") +
ggtitle("Delaware CAP Emissions - Stationary Sources") +
xlab(NULL) +
ylab("Emissions (Thousand Tons)") +
scale_x_continuous(breaks = seq(2002, 2014, by = 3), expand = c(0, 0)) +
scale_y_continuous(labels = scales::comma, limits = c(0, 200))+
theme(plot.margin=unit(c(0,1,0,0),"cm"), plot.title = element_text(vjust=-0.5))
grid.arrange(Nat_Caps_All_plot+theme(legend.position = "none"), Nat_Caps_Stat_plot+theme(legend.position = "none"), DE_Caps_All_Plot+theme(legend.position = "none"), DE_Caps_Stat_plot+theme(legend.position = "none"), legend, layout_matrix = rbind(c(1, 1, 1, 1, 2, 2, 2, 2), c(3, 3, 3, 3, 4, 4, 4, 4), c(NA, 5, 5, 5, 5, 5, 5, NA)), heights = c(1, 1, 0.4))
library(ggplot2)
library(tidyverse)
library(hrbrthemes)
library(ggthemes)
library(cowplot)
library(colorspace)
library(gridExtra)
library(grid)
DE_Caps_All <- read.csv("DE CAPS All.csv", check.names = FALSE)
#make pollutants factors
DE_Caps_All$POLLUTANT <- as.factor(DE_Caps_All$POLLUTANT)
DE_Caps_All_long <- DE_Caps_All %>%
gather(Year, Tons, -POLLUTANT)
#Make year numeric
DE_Caps_All_long$Year <- as.numeric(DE_Caps_All_long$Year)
DE_Caps_All_Plot <-
ggplot(DE_Caps_All_long, aes(x = Year, y = Tons, fill=POLLUTANT)) +
geom_area(alpha = 0.7) +
scale_fill_discrete_diverging(palette = "Vik") +
theme_minimal_hgrid() +
ggtitle("Delaware CAP Emissions - All Sectors") +
xlab(NULL) +
ylab("Emissions (Thousand Tons)") +
scale_x_continuous(breaks = seq(2002, 2014, by = 3), expand = c(0, 0)) +
scale_y_continuous(breaks = seq(0, 500, by = 100), labels = scales::comma)
DE_Caps_Stat <- read.csv("DE Caps Stationary.csv", check.names = FALSE)
#make pollutants factors
DE_Caps_Stat$POLLUTANT <- as.factor(DE_Caps_Stat$POLLUTANT)
DE_Caps_Stat_long <- DE_Caps_Stat %>%
gather(Year, Tons, -POLLUTANT)
#Make year numeric
DE_Caps_Stat_long$Year <- as.numeric(DE_Caps_Stat_long$Year)
DE_Caps_Stat_plot <-  ggplot(DE_Caps_Stat_long, aes(x = Year, y = Tons, fill=POLLUTANT)) +
geom_area(alpha = 0.7) +
theme_minimal_hgrid() +
scale_fill_discrete_diverging(palette = "Vik") +
ggtitle("Delaware CAP Emissions - Stationary Sources") +
xlab(NULL) +
ylab("Emissions (Thousand Tons)") +
scale_x_continuous(breaks = seq(2002, 2014, by = 3), expand = c(0, 0)) +
scale_y_continuous(labels = scales::comma, limits = c(0, 200))+
theme(plot.margin=unit(c(0,1,0,0),"cm"), plot.title = element_text(vjust=-0.2))
Nat_Caps_All <- read.csv("National CAPS All.csv", check.names = FALSE)
#make pollutants factors
Nat_Caps_All$POLLUTANT <- as.factor(Nat_Caps_All$POLLUTANT)
Nat_Caps_All_long <- Nat_Caps_All %>%
gather(Year, Tons, -POLLUTANT)
#Make year numeric
Nat_Caps_All_long$Year <- as.numeric(Nat_Caps_All_long$Year)
Nat_Caps_All_plot <-  ggplot(Nat_Caps_All_long, aes(x = Year, y = Tons, fill=POLLUTANT)) +
geom_area(alpha = 0.7) +
theme_minimal_hgrid() +
scale_fill_discrete_diverging(palette = "Vik") +
xlab(NULL) +
ylab("Emissions (Million Tons)") +
ggtitle("National CAP Emissions - All Sectors") +
scale_x_continuous(breaks = seq(2002, 2014, by = 3), expand = c(0, 0)) +
scale_y_continuous(labels = scales::comma)
Nat_Caps_Stat <- read.csv("National CAPS stationary.csv", check.names = FALSE)
#make pollutants factors
Nat_Caps_Stat$POLLUTANT <- as.factor(Nat_Caps_Stat$POLLUTANT)
Nat_Caps_Stat_long <- Nat_Caps_Stat %>%
gather(Year, Tons, -POLLUTANT)
#Make year numeric
Nat_Caps_Stat_long$Year <- as.numeric(Nat_Caps_Stat_long$Year)
Nat_Caps_Stat_plot <-  ggplot(Nat_Caps_Stat_long, aes(x = Year, y = Tons, fill=POLLUTANT)) +
geom_area(alpha = 0.7) +
theme_minimal_hgrid() +
scale_fill_discrete_diverging(palette = "Vik") +
xlab(NULL) +
ylab("Emissions (Million Tons)") +
ggtitle("National CAP Emissions - Stationary Sources") +
scale_x_continuous(breaks = seq(2002, 2014, by = 3), expand = c(0, 0)) +
scale_y_continuous(labels = scales::comma, limits = c(0, 80))+
theme(plot.margin=unit(c(0,1,0,0),"cm"), plot.title = element_text(vjust=-0.2))
legend <- get_legend(DE_Caps_All_Plot + guides(color = guide_legend(nrow = 1)) +
theme(legend.position = "bottom"))
plot_grid(Nat_Caps_All_plot+theme(legend.position = "none"), Nat_Caps_Stat_plot+theme(legend.position = "none"), DE_Caps_All_Plot+theme(legend.position = "none"), DE_Caps_Stat_plot+theme(legend.position = "none"), legend, ncol = 2, nrow = 3, rel_heights = c(1, 1, .2), align = "v", axis = "l")
#Arranges with legend at bottom
grid.arrange(Nat_Caps_All_plot+theme(legend.position = "none"), Nat_Caps_Stat_plot+theme(legend.position = "none"), DE_Caps_All_Plot+theme(legend.position = "none"), DE_Caps_Stat_plot+theme(legend.position = "none"), legend, layout_matrix = rbind(c(1, 1, 1, 1, 2, 2, 2, 2), c(3, 3, 3, 3, 4, 4, 4, 4), c(NA, 5, 5, 5, 5, 5, 5, NA)), heights = c(1, 1, 0.4))
grid.arrange(Nat_Caps_All_plot+theme(legend.position = "none"), Nat_Caps_Stat_plot+theme(legend.position = "none"), DE_Caps_All_Plot+theme(legend.position = "none"), DE_Caps_Stat_plot+theme(legend.position = "none"), legend, layout_matrix = rbind(c(1, 1, 1, 1, 2, 2, 2, 2), c(3, 3, 3, 3, 4, 4, 4, 4), c(NA, 5, 5, 5, 5, 5, 5, NA)), heights = c(1, 1, 0.4))
View(Nat_Caps_All)
grid_arrange_shared_legend(Nat_Caps_All_plot+theme(legend.position = "none"), Nat_Caps_Stat_plot+theme(legend.position = "none"), DE_Caps_All_Plot+theme(legend.position = "none"), DE_Caps_Stat_plot+theme(legend.position = "none"), ncol = 2, nrow = 2,
position = c("bottom", "right", "top", "left"), plot = TRUE)
View(Nat_Caps_All)
ggplot(DE_Caps_All_long, aes(x = Year, y = Tons, fill=POLLUTANT)) +
geom_area(alpha = 0.7) +
scale_fill_discrete_diverging(palette = "Vik") +
theme_minimal_hgrid() +
ggtitle("Delaware CAP Emissions - All Sectors") +
xlab(NULL) +
ylab("Emissions (Thousand Tons)") +
scale_x_continuous(breaks = seq(2002, 2014, by = 3), expand = c(0, 0)) +
scale_y_continuous(breaks = seq(0, 500, by = 100), labels = scales::comma)
ggplot(Nat_Caps_All_long, aes(x = Year, y = Tons, fill=POLLUTANT)) +
geom_area(alpha = 0.7) +
theme_minimal_hgrid() +
scale_fill_discrete_diverging(palette = "Vik") +
xlab(NULL) +
ylab("Emissions (Million Tons)") +
ggtitle("National CAP Emissions - All Sectors") +
scale_x_continuous(breaks = seq(2002, 2014, by = 3), expand = c(0, 0)) +
scale_y_continuous(labels = scales::comma)
View(Nat_Caps_All_long)
str(Nat_Caps_All_long)
levels(Nat_Caps_All_long$POLLUTANT)
levels(DE_Caps_All_long)
levels(DE_Caps_All_long$POLLUTANT)
Nat_Caps_All_long$POLLUTANT <- factor(Nat_Caps_All_long$POLLUTANT, levels = c("NH3", "CO", "Lead", "NOx", "PM10", "PM2.5", "SO2", "VOC"))
ggplot(Nat_Caps_All_long, aes(x = Year, y = Tons, fill=POLLUTANT)) +
geom_area(alpha = 0.7) +
theme_minimal_hgrid() +
scale_fill_discrete_diverging(palette = "Vik") +
xlab(NULL) +
ylab("Emissions (Million Tons)") +
ggtitle("National CAP Emissions - All Sectors") +
scale_x_continuous(breaks = seq(2002, 2014, by = 3), expand = c(0, 0)) +
scale_y_continuous(labels = scales::comma)
library(ggplot2)
library(tidyverse)
library(hrbrthemes)
library(ggthemes)
library(cowplot)
library(colorspace)
library(gridExtra)
library(grid)
DE_Caps_All <- read.csv("DE CAPS All.csv", check.names = FALSE)
#make pollutants factors
DE_Caps_All$POLLUTANT <- as.factor(DE_Caps_All$POLLUTANT)
DE_Caps_All_long <- DE_Caps_All %>%
gather(Year, Tons, -POLLUTANT)
#Make year numeric
DE_Caps_All_long$Year <- as.numeric(DE_Caps_All_long$Year)
DE_Caps_All_Plot <-
ggplot(DE_Caps_All_long, aes(x = Year, y = Tons, fill=POLLUTANT)) +
geom_area(alpha = 0.7) +
scale_fill_discrete_diverging(palette = "Vik") +
theme_minimal_hgrid() +
ggtitle("Delaware CAP Emissions - All Sectors") +
xlab(NULL) +
ylab("Emissions (Thousand Tons)") +
scale_x_continuous(breaks = seq(2002, 2014, by = 3), expand = c(0, 0)) +
scale_y_continuous(breaks = seq(0, 500, by = 100), labels = scales::comma)
DE_Caps_Stat <- read.csv("DE Caps Stationary.csv", check.names = FALSE)
#make pollutants factors
DE_Caps_Stat$POLLUTANT <- as.factor(DE_Caps_Stat$POLLUTANT)
DE_Caps_Stat_long <- DE_Caps_Stat %>%
gather(Year, Tons, -POLLUTANT)
levels(DE_Caps_All_long$POLLUTANT)
#Make year numeric
DE_Caps_Stat_long$Year <- as.numeric(DE_Caps_Stat_long$Year)
DE_Caps_Stat_plot <-  ggplot(DE_Caps_Stat_long, aes(x = Year, y = Tons, fill=POLLUTANT)) +
geom_area(alpha = 0.7) +
theme_minimal_hgrid() +
scale_fill_discrete_diverging(palette = "Vik") +
ggtitle("Delaware CAP Emissions - Stationary Sources") +
xlab(NULL) +
ylab("Emissions (Thousand Tons)") +
scale_x_continuous(breaks = seq(2002, 2014, by = 3), expand = c(0, 0)) +
scale_y_continuous(labels = scales::comma, limits = c(0, 200))+
theme(plot.margin=unit(c(0,1,0,0),"cm"), plot.title = element_text(vjust=-0.2))
Nat_Caps_All <- read.csv("National CAPS All.csv", check.names = FALSE)
#make pollutants factors
Nat_Caps_All$POLLUTANT <- as.factor(Nat_Caps_All$POLLUTANT)
Nat_Caps_All_long <- Nat_Caps_All %>%
gather(Year, Tons, -POLLUTANT)
Nat_Caps_All_long$POLLUTANT <- factor(Nat_Caps_All_long$POLLUTANT, levels = c("NH3", "CO", "Lead", "NOx", "PM10", "PM2.5", "SO2", "VOC"))
#Make year numeric
Nat_Caps_All_long$Year <- as.numeric(Nat_Caps_All_long$Year)
Nat_Caps_All_plot <-  ggplot(Nat_Caps_All_long, aes(x = Year, y = Tons, fill=POLLUTANT)) +
geom_area(alpha = 0.7) +
theme_minimal_hgrid() +
scale_fill_discrete_diverging(palette = "Vik") +
xlab(NULL) +
ylab("Emissions (Million Tons)") +
ggtitle("National CAP Emissions - All Sectors") +
scale_x_continuous(breaks = seq(2002, 2014, by = 3), expand = c(0, 0)) +
scale_y_continuous(labels = scales::comma)
Nat_Caps_Stat <- read.csv("National CAPS stationary.csv", check.names = FALSE)
#make pollutants factors
Nat_Caps_Stat$POLLUTANT <- as.factor(Nat_Caps_Stat$POLLUTANT)
Nat_Caps_Stat_long <- Nat_Caps_Stat %>%
gather(Year, Tons, -POLLUTANT)
#Make year numeric
Nat_Caps_Stat_long$Year <- as.numeric(Nat_Caps_Stat_long$Year)
Nat_Caps_Stat_plot <-  ggplot(Nat_Caps_Stat_long, aes(x = Year, y = Tons, fill=POLLUTANT)) +
geom_area(alpha = 0.7) +
theme_minimal_hgrid() +
scale_fill_discrete_diverging(palette = "Vik") +
xlab(NULL) +
ylab("Emissions (Million Tons)") +
ggtitle("National CAP Emissions - Stationary Sources") +
scale_x_continuous(breaks = seq(2002, 2014, by = 3), expand = c(0, 0)) +
scale_y_continuous(labels = scales::comma, limits = c(0, 80))+
theme(plot.margin=unit(c(0,1,0,0),"cm"), plot.title = element_text(vjust=-0.2))
legend <- get_legend(DE_Caps_All_Plot + guides(color = guide_legend(nrow = 1)) +
theme(legend.position = "bottom"))
plot_grid(Nat_Caps_All_plot+theme(legend.position = "none"), Nat_Caps_Stat_plot+theme(legend.position = "none"), DE_Caps_All_Plot+theme(legend.position = "none"), DE_Caps_Stat_plot+theme(legend.position = "none"), legend, ncol = 2, nrow = 3, rel_heights = c(1, 1, .2), align = "v", axis = "l")
#Arranges with legend at bottom
grid.arrange(Nat_Caps_All_plot+theme(legend.position = "none"), Nat_Caps_Stat_plot+theme(legend.position = "none"), DE_Caps_All_Plot+theme(legend.position = "none"), DE_Caps_Stat_plot+theme(legend.position = "none"), legend, layout_matrix = rbind(c(1, 1, 1, 1, 2, 2, 2, 2), c(3, 3, 3, 3, 4, 4, 4, 4), c(NA, 5, 5, 5, 5, 5, 5, NA)), heights = c(1, 1, 0.4))
grid.arrange(Nat_Caps_All_plot+theme(legend.position = "none"), Nat_Caps_Stat_plot+theme(legend.position = "none"), DE_Caps_All_Plot+theme(legend.position = "none"), DE_Caps_Stat_plot+theme(legend.position = "none"), legend, layout_matrix = rbind(c(1, 1, 1, 1, 2, 2, 2, 2), c(3, 3, 3, 3, 4, 4, 4, 4), c(NA, 5, 5, 5, 5, 5, 5, NA)), heights = c(1, 1, 0.4))
DE_Caps_Stat <- read.csv("DE Caps Stationary.csv", check.names = FALSE)
#make pollutants factors
DE_Caps_Stat$POLLUTANT <- as.factor(DE_Caps_Stat$POLLUTANT)
DE_Caps_Stat_long <- DE_Caps_Stat %>%
gather(Year, Tons, -POLLUTANT)
levels(DE_Caps_All_long$POLLUTANT)
#Make year numeric
DE_Caps_Stat_long$Year <- as.numeric(DE_Caps_Stat_long$Year)
DE_Caps_Stat_plot <-  ggplot(DE_Caps_Stat_long, aes(x = Year, y = Tons, fill=POLLUTANT)) +
geom_area(alpha = 0.7) +
theme_minimal_hgrid() +
scale_fill_discrete_diverging(palette = "Vik") +
ggtitle("Delaware CAP Emissions - Stationary Sources") +
xlab(NULL) +
ylab("Emissions (Thousand Tons)") +
scale_x_continuous(breaks = seq(2002, 2014, by = 3), expand = c(0, 0)) +
scale_y_continuous(labels = scales::comma, limits = c(0, 200))+
theme(plot.margin=unit(c(0,1,0,0),"cm"), plot.title = element_text(vjust=-0.1))
Nat_Caps_Stat <- read.csv("National CAPS stationary.csv", check.names = FALSE)
#make pollutants factors
Nat_Caps_Stat$POLLUTANT <- as.factor(Nat_Caps_Stat$POLLUTANT)
Nat_Caps_Stat_long <- Nat_Caps_Stat %>%
gather(Year, Tons, -POLLUTANT)
#Make year numeric
Nat_Caps_Stat_long$Year <- as.numeric(Nat_Caps_Stat_long$Year)
Nat_Caps_Stat_plot <-  ggplot(Nat_Caps_Stat_long, aes(x = Year, y = Tons, fill=POLLUTANT)) +
geom_area(alpha = 0.7) +
theme_minimal_hgrid() +
scale_fill_discrete_diverging(palette = "Vik") +
xlab(NULL) +
ylab("Emissions (Million Tons)") +
ggtitle("National CAP Emissions - Stationary Sources") +
scale_x_continuous(breaks = seq(2002, 2014, by = 3), expand = c(0, 0)) +
scale_y_continuous(labels = scales::comma, limits = c(0, 80))+
theme(plot.margin=unit(c(0,1,0,0),"cm"), plot.title = element_text(vjust=-0.1))
grid.arrange(Nat_Caps_All_plot+theme(legend.position = "none"), Nat_Caps_Stat_plot+theme(legend.position = "none"), DE_Caps_All_Plot+theme(legend.position = "none"), DE_Caps_Stat_plot+theme(legend.position = "none"), legend, layout_matrix = rbind(c(1, 1, 1, 1, 2, 2, 2, 2), c(3, 3, 3, 3, 4, 4, 4, 4), c(NA, 5, 5, 5, 5, 5, 5, NA)), heights = c(1, 1, 0.4))
library(tidyverse)
library(ggplot2)
library(lubridate)
Monitoring_data <- read_csv("Copy of Hourly Monitoring Data for R_Simplified.csv", na = c("NoData", "<Samp", "Down"), skip = 2)
Monitoring_Ozone <- Monitoring_data %>%
select(c(1:7, 11, 13))
Monitoring_Ozone$Date <- mdy(Monitoring_Ozone$Date)
Monitoring_Ozone <-  Monitoring_Ozone %>%
mutate(Timestamp = as_datetime(paste(Monitoring_Ozone$Date, Monitoring_Ozone$Time))) %>%
select(-Date, -Time)
Monitoring_long <-  gather(Monitoring_Ozone,"Measure", "Ozone", 1:7)
ggplot(Monitoring_long, aes(x = Timestamp, y = Ozone, color = Measure)) +
geom_line() +
theme_classic()
library(tidyverse)
library(ggplot2)
library(lubridate)
Monitoring_data <- read_csv("Homework_Hourly Monitoring Data for R_Simplified.csv", na = c("NoData", "<Samp", "Down", "NA"), skip = 3)
Monitoring_Ozone <- Monitoring_data %>%
select(c(1:7, 11, 13))
Monitoring_Ozone$Date <- mdy(Monitoring_Ozone$Date)
Monitoring_Ozone <-  Monitoring_Ozone %>%
mutate(Timestamp = as_datetime(paste(Monitoring_Ozone$Date, Monitoring_Ozone$Time))) %>%
select(-Date, -Time)
Monitoring_long <-  gather(Monitoring_Ozone,"Measure", "Ozone", 1:7)
ggplot(Monitoring_long, aes(x = Timestamp, y = Ozone, color = Measure)) +
geom_line() +
theme_classic()
View(Monitoring_long)
ggplot(Monitoring_long, aes(x = Timestamp, y = Ozone, color = Measure)) +
geom_line() +
theme_classic()
str(Monitoring_long)
Monitoring_data <- read_csv("Homework_Hourly Monitoring Data for R_Simplified.csv", na = c("NoData", "<Samp", "Down", "NA"), skip = 3)
Monitoring_Ozone <- Monitoring_data %>%
select(c(1:7, 11, 13))
Monitoring_Ozone$Date <- mdy(Monitoring_Ozone$Date)
Monitoring_Ozone <-  Monitoring_Ozone %>%
mutate(Timestamp = as_datetime(paste(Monitoring_Ozone$Date, Monitoring_Ozone$Time))) %>%
select(-Date, -Time)
Monitoring_long <-  gather(Monitoring_Ozone,"Station", "Ozone", 1:7)
View(Monitoring_long)
Monitoring_data <- read_csv("Homework_Hourly Monitoring Data for R_Simplified.csv", na = c("NoData", "<Samp", "Down", "NA"), skip = 3)
Monitoring_Ozone <- Monitoring_data %>%
select(c(1:7, 11, 13))
Monitoring_Ozone$Date <- mdy(Monitoring_Ozone$Date)
Monitoring_Ozone <-  Monitoring_Ozone %>%
mutate(Timestamp = as_datetime(paste(Monitoring_Ozone$Date, Monitoring_Ozone$Time))) %>%
select(-Date, -Time)
Monitoring_long <-  gather(Monitoring_Ozone,"Station", "Ozone_ppm", 1:7)
View(Monitoring_long)
str(Monitoring_long)
Monitoring_long$Station <- as.factor(Monitoring_long$Station)
str(Monitoring_long)
levels(Monitoring_long$Station)
Monitoring_long$Station <- recode_factor(Monitoring_long$Station, `Bellefonte II Ozone ppm` = "Bellefonte II")
levels(Monitoring_long$Station)
Monitoring_data <- read_csv("Homework_Hourly Monitoring Data for R_Simplified.csv", na = c("NoData", "<Samp", "Down", "NA"), skip = 3)
Monitoring_Ozone <- Monitoring_data %>%
select(c(1:7, 11, 13))
Monitoring_Ozone$Date <- mdy(Monitoring_Ozone$Date)
Monitoring_Ozone <-  Monitoring_Ozone %>%
mutate(Timestamp = as_datetime(paste(Monitoring_Ozone$Date, Monitoring_Ozone$Time))) %>%
select(-Date, -Time)
Monitoring_long <-  gather(Monitoring_Ozone,"Station", "Ozone_ppm", 1:7)
Monitoring_long$Station <- as.factor(Monitoring_long$Station)
Monitoring_long$Station <- recode_factor(Monitoring_long$Station, `Bellefonte II Ozone ppm` = "Bellefonte II", `Brandywine Creek State Park Ozone ppm` = "Brandywine Creek State Park", `Killens Pond Ozone ppm` = "Killens Pond", `Lewes Ozone ppm` = "Lewes", `Lums Pond State Park Ozone ppm` = "Lums Pond State Park", `Martin Luther King Ozone ppm` = "Martin Luther King", `Seaford Ozone ppm` = "Seaford Ozone ppm")
ggplot(Monitoring_long, aes(x = Timestamp, y = Ozone, color = Measure)) +
geom_line() +
theme_classic()
Monitoring_data <- read_csv("Homework_Hourly Monitoring Data for R_Simplified.csv", na = c("NoData", "<Samp", "Down", "NA"), skip = 3)
Monitoring_Ozone <- Monitoring_data %>%
select(c(1:7, 11, 13))
Monitoring_Ozone$Date <- mdy(Monitoring_Ozone$Date)
Monitoring_Ozone <-  Monitoring_Ozone %>%
mutate(Timestamp = as_datetime(paste(Monitoring_Ozone$Date, Monitoring_Ozone$Time))) %>%
select(-Date, -Time)
Monitoring_long <-  gather(Monitoring_Ozone,"Station", "Ozone_ppm", 1:7)
Monitoring_long$Station <- as.factor(Monitoring_long$Station)
Monitoring_long$Station <- recode_factor(Monitoring_long$Station, `Bellefonte II Ozone ppm` = "Bellefonte II", `Brandywine Creek State Park Ozone ppm` = "Brandywine Creek State Park", `Killens Pond Ozone ppm` = "Killens Pond", `Lewes Ozone ppm` = "Lewes", `Lums Pond State Park Ozone ppm` = "Lums Pond State Park", `Martin Luther King Ozone ppm` = "Martin Luther King", `Seaford Ozone ppm` = "Seaford Ozone ppm")
ggplot(Monitoring_long, aes(x = Timestamp, y = Ozone_ppm, color = Measure)) +
geom_line() +
theme_classic()
Monitoring_data <- read_csv("Homework_Hourly Monitoring Data for R_Simplified.csv", na = c("NoData", "<Samp", "Down", "NA"), skip = 3)
Monitoring_Ozone <- Monitoring_data %>%
select(c(1:7, 11, 13))
Monitoring_Ozone$Date <- mdy(Monitoring_Ozone$Date)
Monitoring_Ozone <-  Monitoring_Ozone %>%
mutate(Timestamp = as_datetime(paste(Monitoring_Ozone$Date, Monitoring_Ozone$Time))) %>%
select(-Date, -Time)
Monitoring_long <-  gather(Monitoring_Ozone,"Station", "Ozone_ppm", 1:7)
Monitoring_long$Station <- as.factor(Monitoring_long$Station)
Monitoring_long$Station <- recode_factor(Monitoring_long$Station, `Bellefonte II Ozone ppm` = "Bellefonte II", `Brandywine Creek State Park Ozone ppm` = "Brandywine Creek State Park", `Killens Pond Ozone ppm` = "Killens Pond", `Lewes Ozone ppm` = "Lewes", `Lums Pond State Park Ozone ppm` = "Lums Pond State Park", `Martin Luther King Ozone ppm` = "Martin Luther King", `Seaford Ozone ppm` = "Seaford Ozone ppm")
ggplot(Monitoring_long, aes(x = Timestamp, y = Ozone_ppm, color = Station)) +
geom_line() +
theme_classic()
levels(Monitoring_long$Station)
Monitoring_data <- read_csv("Homework_Hourly Monitoring Data for R_Simplified.csv", na = c("NoData", "<Samp", "Down", "NA"), skip = 3)
Monitoring_Ozone <- Monitoring_data %>%
select(c(1:7, 11, 13))
Monitoring_Ozone$Date <- mdy(Monitoring_Ozone$Date)
Monitoring_Ozone <-  Monitoring_Ozone %>%
mutate(Timestamp = as_datetime(paste(Monitoring_Ozone$Date, Monitoring_Ozone$Time))) %>%
select(-Date, -Time)
Monitoring_long <-  gather(Monitoring_Ozone,"Station", "Ozone_ppm", 1:7)
Monitoring_long$Station <- as.factor(Monitoring_long$Station, ordered = F)
Monitoring_data <- read_csv("Homework_Hourly Monitoring Data for R_Simplified.csv", na = c("NoData", "<Samp", "Down", "NA"), skip = 3)
Monitoring_Ozone <- Monitoring_data %>%
select(c(1:7, 11, 13))
Monitoring_Ozone$Date <- mdy(Monitoring_Ozone$Date)
Monitoring_Ozone <-  Monitoring_Ozone %>%
mutate(Timestamp = as_datetime(paste(Monitoring_Ozone$Date, Monitoring_Ozone$Time))) %>%
select(-Date, -Time)
Monitoring_long <-  gather(Monitoring_Ozone,"Station", "Ozone_ppm", 1:7)
Monitoring_long$Station <- as.factor(Monitoring_long$Station, ordered = FALSE)
Monitoring_data <- read_csv("Homework_Hourly Monitoring Data for R_Simplified.csv", na = c("NoData", "<Samp", "Down", "NA"), skip = 3)
Monitoring_Ozone <- Monitoring_data %>%
select(c(1:7, 11, 13))
Monitoring_Ozone$Date <- mdy(Monitoring_Ozone$Date)
Monitoring_Ozone <-  Monitoring_Ozone %>%
mutate(Timestamp = as_datetime(paste(Monitoring_Ozone$Date, Monitoring_Ozone$Time))) %>%
select(-Date, -Time)
Monitoring_long <-  gather(Monitoring_Ozone,"Station", "Ozone_ppm", 1:7)
Monitoring_long$Station <- as.factor(Monitoring_long$Station)
Monitoring_long$Station <- recode_factor(Monitoring_long$Station, `Bellefonte II Ozone ppm` = "Bellefonte II", `Brandywine Creek State Park Ozone ppm` = "Brandywine Creek State Park", `Killens Pond Ozone ppm` = "Killens Pond", `Lewes Ozone ppm` = "Lewes", `Lums Pond State Park Ozone ppm` = "Lums Pond State Park", `Martin Luther King Ozone ppm` = "Martin Luther King", `Seaford Ozone ppm` = "Seaford Ozone ppm")
ggplot(Monitoring_long, aes(x = Timestamp, y = Ozone_ppm, color = Station)) +
geom_line() +
theme_classic()
min(Monitoring_long$Station)
#repeated code start:
Monitoring_data <- read_csv("Homework_Hourly Monitoring Data for R_Simplified.csv", na = c("NoData", "<Samp", "Down", "NA"), skip = 3)
Monitoring_Ozone <- Monitoring_data %>%
select(c(1:7, 11, 13))
Monitoring_Ozone$Date <- mdy(Monitoring_Ozone$Date)
Monitoring_Ozone <-  Monitoring_Ozone %>%
mutate(Timestamp = as_datetime(paste(Monitoring_Ozone$Date, Monitoring_Ozone$Time))) %>%
select(-Date, -Time)
#repeated code end
#I gave the variables useful, recognizable names. Always a good practice!
Monitoring_long <-  gather(Monitoring_Ozone,"Station", "Ozone_ppm", 1:7)
#then, I change the character names of the station into factors. This is a new data type for you! As we've said, R is a statistical program, and know how to "think" about categorical variables. Read the documentation for the as.factor function!
Monitoring_long$Station <- as.factor(Monitoring_long$Station)
#Next, I want to change the names of the factors. I added "ppm" to the ozone variable name, so the station names don't need it! Also, one of our variables is "ozone", so there is no need to have "ozone" in each place name! Also, since it is now a factor, I don't have to so some sort of find and replace, I can just "recode" the factor, and it will change all of the names!
Monitoring_long$Station <- recode_factor(Monitoring_long$Station, `Bellefonte II Ozone ppm` = "Bellefonte II", `Brandywine Creek State Park Ozone ppm` = "Brandywine Creek State Park", `Killens Pond Ozone ppm` = "Killens Pond", `Lewes Ozone ppm` = "Lewes", `Lums Pond State Park Ozone ppm` = "Lums Pond State Park", `Martin Luther King Ozone ppm` = "Martin Luther King", `Seaford Ozone ppm` = "Seaford Ozone ppm")
#you can check your factor levels this way:
levels(Monitoring_long$Station)
library(tidyverse)
library(ggplot2)
library(lubridate)
Monitoring_data <- read_csv("Homework_Hourly Monitoring Data for R_Simplified.csv", na = c("NoData", "<Samp", "Down", "NA"), skip = 3)
Monitoring_Ozone <- Monitoring_data %>%
select(c(1:7, 11, 13))
Monitoring_Ozone$Date <- mdy(Monitoring_Ozone$Date)
Monitoring_Ozone <-  Monitoring_Ozone %>%
mutate(Timestamp = as_datetime(paste(Monitoring_Ozone$Date, Monitoring_Ozone$Time))) %>%
select(-Date, -Time)
Monitoring_long <-  gather(Monitoring_Ozone,"Station", "Ozone_ppm", 1:7)
Monitoring_long$Station <- as.factor(Monitoring_long$Station)
Monitoring_long$Station <- recode_factor(Monitoring_long$Station, `Bellefonte II Ozone ppm` = "Bellefonte II", `Brandywine Creek State Park Ozone ppm` = "Brandywine Creek State Park", `Killens Pond Ozone ppm` = "Killens Pond", `Lewes Ozone ppm` = "Lewes", `Lums Pond State Park Ozone ppm` = "Lums Pond State Park", `Martin Luther King Ozone ppm` = "Martin Luther King", `Seaford Ozone ppm` = "Seaford Ozone ppm")
ggplot(Monitoring_long, aes(x = Timestamp, y = Ozone_ppm, color = Station)) +
geom_line() +
theme_classic()
library(tidyverse)
library(ggplot2)
library(lubridate)
Monitoring_data <- read_csv("Homework_Hourly Monitoring Data for R_Simplified - time integer.csv", na = c("NoData", "<Samp", "Down", "NA"), skip = 3)
setwd("F:\\AQM\\Shane Cone\\R_Course_coteach\\R Markdown Presentation\\Homework")
Monitoring_data <- read_csv("Homework_Hourly Monitoring Data for R_Simplified - time integer.csv", na = c("NoData", "<Samp", "Down", "NA"), skip = 3)
Monitoring_Ozone <- Monitoring_data %>%
select(c(1:7, 11, 13))
Monitoring_Ozone$Date <- mdy(Monitoring_Ozone$Date)
Monitoring_Ozone <- Monitoring_data %>%
select(c(1:7, 11, 13))
Monitoring_Ozone$Date <- mdy(Monitoring_Ozone$Date)
View(Monitoring_Ozone)
Monitoring_data <- read_csv("Homework_Hourly Monitoring Data for R_Simplified - time integer.csv", na = c("NoData", "<Samp", "Down", "NA"))
Monitoring_Ozone <- Monitoring_data %>%
select(c(1:7, 11, 13))
Monitoring_Ozone$Date <- mdy(Monitoring_Ozone$Date)
str(Monitoring_Ozone)
Monitoring_Ozone$Time <- h(Monitoring_Ozone$Time)
Monitoring_Ozone$Time <- hm(Monitoring_Ozone$Time)
str(Monitoring_Ozone)
Monitoring_data <- read_csv("Homework_Hourly Monitoring Data for R_Simplified - time integer.csv", na = c("NoData", "<Samp", "Down", "NA"))
Monitoring_Ozone <- Monitoring_data %>%
select(c(1:7, 11, 13))
Monitoring_Ozone$Date <- mdy(Monitoring_Ozone$Date)
Monitoring_Ozone$Time <- as.hms(Monitoring_Ozone$Time)
library(lubridate)
Monitoring_Ozone$Time <- as.hms(Monitoring_Ozone$Time)
library(tidyverse)
Monitoring_Ozone$Time <- as.hms(Monitoring_Ozone$Time)
library(hms)
Monitoring_Ozone$Time <- as.hms(Monitoring_Ozone$Time)
str(Monitoring_Ozone)
Monitoring_data <- read_csv("Homework_Hourly Monitoring Data for R_Simplified - time integer.csv", na = c("NoData", "<Samp", "Down", "NA"))
library(tidyverse)
library(ggplot2)
library(lubridate)
setwd("F:\\AQM\\Shane Cone\\R_Course_coteach\\R Markdown Presentation\\Homework")
Monitoring_data <- read_csv("Homework_Hourly Monitoring Data for R_Simplified - time integer.csv", na = c("NoData", "<Samp", "Down", "NA"))
Monitoring_Ozone <- Monitoring_data %>%
select(c(1:7, 11, 13))
Monitoring_Ozone$Date <- mdy(Monitoring_Ozone$Date)
View(Monitoring_Ozone)
Monitoring_Ozone <- Monitoring_Ozone %>%
mutate("hour" = paste(Time, ":00"))
Monitoring_Ozone <- Monitoring_Ozone %>%
mutate("hour" = paste(Time, ":00"))
Monitoring_Ozone <- Monitoring_Ozone %>%
mutate("hour" = paste(trimws(Time), ":00"))
Monitoring_Ozone <- Monitoring_Ozone %>%
mutate("hour" = hm(paste(trimws(Time), ":00")))
Monitoring_Ozone <- Monitoring_Ozone %>%
mutate("Hour2" = as.POSIXct(Time))
Monitoring_Ozone <- Monitoring_Ozone %>%
mutate("hour" = hms(paste(trimws(Time), ":00")))
Monitoring_Ozone <- Monitoring_Ozone %>%
mutate("hour" = hm(paste(trimws(Time), ":00")))
Monitoring_Ozone$hour <- hms(Monitoring_Ozone$hour)
Monitoring_Ozone <- Monitoring_Ozone %>%
mutate("hour" = hour(trimws(Time)))
View(Monitoring_Ozone)
Monitoring_Ozone <- Monitoring_Ozone %>%
mutate("hour" = floor_date(trimws(Time), hour))
Monitoring_Ozone <- Monitoring_Ozone %>%
mutate("Timestamp" = as.POSIXct(paste(Date, Time), tz = "UTC"), "%m-%d-%Y %H:%M:%S")
Monitoring_Ozone <- Monitoring_Ozone %>%
mutate("Timestamp" = as.POSIXct(paste(Date, Time), tz = "UTC"), tryFormats = "%m-%d-%Y %H:%M:%S")
